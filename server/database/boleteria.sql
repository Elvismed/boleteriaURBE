-- MySQL Script generated by MySQL Workbench
-- Tue Sep 10 14:04:49 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema boleteria
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `boleteria` ;

-- -----------------------------------------------------
-- Schema boleteria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `boleteria` DEFAULT CHARACTER SET utf8 ;
USE `boleteria` ;

-- -----------------------------------------------------
-- Table `boleteria`.`datos_comunicacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`datos_comunicacion` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`datos_comunicacion` (
  `iddatos_comunicacion` INT NOT NULL,
  `telefono` VARCHAR(45) NOT NULL,
  `ciudad` VARCHAR(45) NOT NULL,
  `municipio` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`iddatos_comunicacion`));



-- -----------------------------------------------------
-- Table `boleteria`.`datos_personales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`datos_personales` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`datos_personales` (
  `iddatos_personales` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `sexo` VARCHAR(45) NOT NULL,
  `edad` INT NOT NULL,
  PRIMARY KEY (`iddatos_personales`));


-- -----------------------------------------------------
-- Table `boleteria`.`usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`usuarios` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`usuarios` (
  `idusuarios` INT NOT NULL,
  `user` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `datos_comunicacion_iddatos_comunicacion` INT NOT NULL,
  `datos_personales_iddatos_personales` INT NOT NULL,
  PRIMARY KEY (`idusuarios`),
  CONSTRAINT `fk_usuarios_datos_comunicacion1`
    FOREIGN KEY (`datos_comunicacion_iddatos_comunicacion`)
    REFERENCES `boleteria`.`datos_comunicacion` (`iddatos_comunicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_datos_personales1`
    FOREIGN KEY (`datos_personales_iddatos_personales`)
    REFERENCES `boleteria`.`datos_personales` (`iddatos_personales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `boleteria`.`Lugar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`Lugar` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`Lugar` (
  `idLugar` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `reserva_idresevas` INT NOT NULL,
  PRIMARY KEY (`idLugar`));


-- -----------------------------------------------------
-- Table `boleteria`.`zonas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`zonas` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`zonas` (
  `idzona_bucata` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `precio` DOUBLE NOT NULL,
  `Lugar_idLugar` INT NOT NULL,
  `usuarios_idusuarios` INT NOT NULL,
  PRIMARY KEY (`idzona_bucata`),
  CONSTRAINT `fk_zonas_Lugar1`
    FOREIGN KEY (`Lugar_idLugar`)
    REFERENCES `boleteria`.`Lugar` (`idLugar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_zonas_usuarios1`
    FOREIGN KEY (`usuarios_idusuarios`)
    REFERENCES `boleteria`.`usuarios` (`idusuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `boleteria`.`area`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`area` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`area` (
  `idarea` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `capacidad` VARCHAR(45) NOT NULL,
  `zonas_bucata_idzona_bucata` INT NOT NULL,
  PRIMARY KEY (`idarea`),
  CONSTRAINT `fk_area_zonas_bucata1`
    FOREIGN KEY (`zonas_bucata_idzona_bucata`)
    REFERENCES `boleteria`.`zonas` (`idzona_bucata`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `boleteria`.`factura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`factura` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`factura` (
  `idfactura` INT NOT NULL,
  `numero_fact` VARCHAR(45) NOT NULL,
  `fecha` DATE NOT NULL,
  `hora` TIMESTAMP NOT NULL,
  `subtotal` DOUBLE NOT NULL,
  `total` DOUBLE NOT NULL,
  `usuarios_idusuarios` INT NOT NULL,
  PRIMARY KEY (`idfactura`),
  CONSTRAINT `fk_factura_usuarios1`
    FOREIGN KEY (`usuarios_idusuarios`)
    REFERENCES `boleteria`.`usuarios` (`idusuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `boleteria`.`estado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`estado` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`estado` (
  `idestado` INT NOT NULL,
  `APROBADO` INT NOT NULL,
  `RECHAZADO` INT NOT NULL,
  `PENDIENTE` INT NOT NULL,
  PRIMARY KEY (`idestado`));


-- -----------------------------------------------------
-- Table `boleteria`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`ticket` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`ticket` (
  `idticket` INT NOT NULL,
  `codigo` VARCHAR(45) NOT NULL,
  `factura_idfactura` INT NOT NULL,
  `estado_idestado` INT NOT NULL,
  `fecha_reserva` INT NOT NULL,
  PRIMARY KEY (`idticket`),
  CONSTRAINT `fk_ticket_factura1`
    FOREIGN KEY (`factura_idfactura`)
    REFERENCES `boleteria`.`factura` (`idfactura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_estado1`
    FOREIGN KEY (`estado_idestado`)
    REFERENCES `boleteria`.`estado` (`idestado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `boleteria`.`butaca`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`butaca` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`butaca` (
  `idbutacas` INT NOT NULL,
  `ubicacion` VARCHAR(45) NOT NULL,
  `area_idarea` INT NOT NULL,
  `ticket_idticket` INT NOT NULL,
  PRIMARY KEY (`idbutacas`),
  CONSTRAINT `fk_butaca_area1`
    FOREIGN KEY (`area_idarea`)
    REFERENCES `boleteria`.`area` (`idarea`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_butaca_ticket1`
    FOREIGN KEY (`ticket_idticket`)
    REFERENCES `boleteria`.`ticket` (`idticket`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `boleteria`.`tipos_evento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`tipos_evento` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`tipos_evento` (
  `idtipos_eventos` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idtipos_eventos`));


-- -----------------------------------------------------
-- Table `boleteria`.`evento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`evento` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`evento` (
  `ideventos` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `fecha` DATE NOT NULL,
  `hora` VARCHAR(45) NOT NULL,
  `tipos_evento_idtipos_eventos` INT NOT NULL,
  `usuarios_idusuarios` INT NOT NULL,
  PRIMARY KEY (`ideventos`),
  CONSTRAINT `fk_evento_tipos_evento1`
    FOREIGN KEY (`tipos_evento_idtipos_eventos`)
    REFERENCES `boleteria`.`tipos_evento` (`idtipos_eventos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evento_usuarios1`
    FOREIGN KEY (`usuarios_idusuarios`)
    REFERENCES `boleteria`.`usuarios` (`idusuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `boleteria`.`Lugar_has_evento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `boleteria`.`Lugar_has_evento` ;

CREATE TABLE IF NOT EXISTS `boleteria`.`Lugar_has_evento` (
  `Lugar_idLugar` INT NOT NULL,
  `evento_ideventos` INT NOT NULL,
  PRIMARY KEY (`Lugar_idLugar`, `evento_ideventos`),
  CONSTRAINT `fk_Lugar_has_evento_Lugar1`
    FOREIGN KEY (`Lugar_idLugar`)
    REFERENCES `boleteria`.`Lugar` (`idLugar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Lugar_has_evento_evento1`
    FOREIGN KEY (`evento_ideventos`)
    REFERENCES `boleteria`.`evento` (`ideventos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
